/*
  Global styles of HTML elements
  You can add more styles to this layer to style HTML elements.
*/
@layer base {
  *,
  :before,
  :after {
    box-sizing: border-box;
  }

  :where(:not(dialog)) {
    margin: 0;
  }

  :where(:not(fieldset, progress, meter)) {
    border-width: 0;
    border-style: solid;
    background-origin: border-box;
    background-repeat: no-repeat;
  }

  :where(html) {
    block-size: 100%;
    font-family: var(--acv-font-family-default), sans-serif;
    font-synthesis: none;
    line-height: var(--acv-font-line-height-1-5);
    tab-size: 4;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-size-adjust: none; /* https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/ */

    @media (prefers-reduced-motion: no-preference) {
      scroll-behavior: smooth;
    }
  }

  :where(:not(:active):focus-visible) {
    outline-offset: 5px;
  }

  :where(body) {
    min-block-size: 100%;
  }

  :where(h1, h2, h3, h4, h5, h6) {
    line-height: var(--acv-font-line-height-1-1);
    font-weight: var(--acv-font-weight-strong);
    text-wrap: balance;
  }

  :where(h1) {
    font-size: var(--acv-font-size-relative-3-5);
    max-inline-size: var(--acv-size-header-20ch);
  }

  :where(h2) {
    font-size: var(--acv-font-size-relative-2-5);
    max-inline-size: var(--acv-size-header-25ch);
  }

  :where(h3) {
    font-size: var(--acv-font-size-relative-2);
  }

  :where(h4) {
    font-size: var(--acv-font-size-relative-1-5);
  }

  :where(h5) {
    font-size: var(--acv-font-size-relative-1-25);
  }

  :where(h3, h4, h5, h6, dt) {
    max-inline-size: var(--acv-size-header-35ch);
  }

  :where(p, ul, ol, dl, h6) {
    font-size: var(--acv-font-size-relative-1-1);
  }

  :where(a, u, ins, abbr) {
    text-underline-offset: 1px;

    @supports (-moz-appearance: none) {
      text-underline-offset: 2px;
    }
  }

  :where(
      a[href],
      area,
      button,
      input:not(
          [type="text"],
          [type="email"],
          [type="number"],
          [type="password"],
          [type=""],
          [type="tel"],
          [type="url"]
        ),
      label[for],
      select,
      summary,
      [tabindex]:not([tabindex*="-"], pre)
    ) {
    cursor: pointer;
  }

  :where(
      a[href],
      area,
      button,
      input,
      label[for],
      select,
      summary,
      textarea,
      [tabindex]:not([tabindex*="-"])
    ) {
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  :where(a) {
    &:where([href]) {
      text-decoration-color: var(--acv-color-primary);

      &:where(:visited) {
        text-decoration-color: var(--acv-color-secondary);
      }
    }

    &:where(:not(:hover)) {
      text-decoration: inherit;
    }
  }

  :where(img, svg, video, canvas, audio, iframe, embed, object) {
    display: block;
  }

  :where(img, svg, video) {
    max-inline-size: 100%;
    block-size: auto;
  }

  :where(input, button, textarea, select),
  :where(input[type="file"])::-webkit-file-upload-button {
    font: inherit;
    font-size: inherit;
    color: inherit;
    letter-spacing: inherit;
  }

  ::placeholder {
    color: var(--acv-color-gray-dark);
    opacity: 0.75;
  }

  :where(input:not([type="range"]), textarea) {
    padding-inline: var(--acv-size-8px);
    padding-block: var(--acv-size-relative-025);
  }

  :where(select) {
    padding-inline: var(--acv-size-relative-4) 0;
    padding-block: 0.75ch;
  }

  :where(
      textarea,
      select,
      input:not([type="button"], [type="submit"], [type="reset"])
    ) {
    background-color: var(--acv-surface-secondary);
    border-radius: var(--acv-border-radius-regular);
  }

  :where(textarea) {
    resize: block;
  }

  :where(input[type="checkbox"], input[type="radio"]) {
    block-size: var(--acv-size-16px);
    inline-size: var(--acv-size-16px);
  }

  :where(svg:not([width])) {
    inline-size: var(--acv-size-80px);
  }

  :where(code, kbd, samp, pre) {
    font-family: var(--acv-font-monospace), monospace;
  }

  :where(:not(pre) > code, kbd) {
    white-space: nowrap;
  }

  :where(pre) {
    white-space: pre;
    min-inline-size: 0;
    max-inline-size: max-content;
    writing-mode: lr;
    direction: ltr;
  }

  :where(:not(pre) > code) {
    padding: var(--acv-size-relative-025) var(--acv-size-8px);
    background: var(--acv-surface-secondary);
    border-radius: var(--acv-border-radius-regular);
    writing-mode: lr;
  }

  :where(kbd, var) {
    padding: var(--acv-size-relative-025) var(--acv-size-8px);
    border-width: var(--acv-border-width-small);
    border-color: var(--acv-surface-secondary);
    border-radius: var(--acv-border-radius-regular);
  }

  :where(mark) {
    border-radius: var(--acv-border-radius-regular);
    padding-inline: var(--acv-size-relative-025);
  }

  :where(ol, ul) {
    padding-inline-start: var(--acv-size-relative-3);
  }

  :where(li) {
    padding-inline-start: var(--acv-size-8px);
  }

  :where(li, dd, figcaption) {
    max-inline-size: var(--acv-size-content-45ch);
  }

  :where(p) {
    max-inline-size: var(--acv-size-content-60ch);
    text-wrap: pretty;
  }

  :where(dt, summary) {
    font-weight: var(--acv-font-weight-x-strong);
  }

  :where(dt:not(:first-of-type)) {
    margin-block-start: var(--acv-size-relative-1-5);
  }

  :where(small) {
    font-size: max(0.5em, var(--acv-font-size-relative-075));
    max-inline-size: var(--acv-size-content-20ch);
  }

  :where(hr) {
    margin-block: var(--acv-size-fluid-5);
    height: var(--acv-border-width-medium);
    background-color: var(--acv-surface-secondary);
  }

  :where(figure) {
    display: grid;
    gap: var(--acv-size-8px);
    place-items: center;

    & > :where(figcaption) {
      font-size: var(--acv-font-size-relative-1);
      text-wrap: balance;
    }
  }

  :where(blockquote, :not(blockquote) > cite) {
    border-inline-start-width: var(--acv-border-size-4px);
  }

  :where(blockquote) {
    display: grid;
    gap: var(--acv-size-16px);
    padding-block: var(--acv-size-16px);
    padding-inline: var(--acv-size-relative-1-25);
    max-inline-size: var(--acv-size-content-45ch);
  }

  :where(:not(blockquote) > cite) {
    padding-inline-start: var(--acv-size-8px);
  }

  :where(summary) {
    background: var(--acv-surface-primary-darker);
    padding: var(--acv-size-8px) var(--acv-size-16px);
    margin: calc(var(--acv-size-8px) * -1) calc(var(--acv-size-16px) * -1);
    border-radius: var(--acv-border-radius-regular);
  }

  :where(details) {
    padding-inline: var(--acv-size-16px);
    padding-block: var(--acv-size-8px);
    background: var(--acv-surface-secondary);
    border-radius: var(--acv-border-radius-regular);
  }

  :where(details[open] > summary) {
    margin-bottom: var(--acv-size-8px);
    border-end-start-radius: 0;
    border-end-end-radius: 0;
  }

  :where(abbr) {
    text-decoration-color: var(--acv-color-blue);
  }

  :where(dialog) {
    background-color: var(--acv-surface-white);
    color: inherit;
    border-radius: var(--acv-radius-relative-1);
    box-shadow: var(--acv-shadow-base-xx-large);
  }

  :where(menu) {
    padding-inline-start: 0;

    /* display: flex; */

    /* gap: var(--acv-size-16px); */
  }

  :where(sup) {
    font-size: var(--acv-font-size-fineprint);
  }

  :where(table) {
    --nice-inner-radius: calc(var(--acv-radius-relative-1) - 2px);
    width: fit-content;
    border: 1px solid var(--acv-surface-secondary);
    background: var(--acv-surface-secondary);
    border-radius: var(--acv-radius-relative-1);
  }

  :where(table:not(:has(tfoot)) tr:last-child td:first-child) {
    border-end-start-radius: var(--nice-inner-radius);
  }

  :where(table:not(:has(tfoot)) tr:last-child td:last-child) {
    border-end-end-radius: var(--nice-inner-radius);
  }

  :where(table thead tr:first-child th:first-child) {
    border-start-start-radius: var(--nice-inner-radius);
  }

  :where(table thead tr:first-child th:last-child) {
    border-start-end-radius: var(--nice-inner-radius);
  }

  :where(tfoot tr:last-child :is(th, td):first-of-type) {
    border-end-start-radius: var(--nice-inner-radius);
  }

  :where(tfoot tr:last-child :is(th, td):last-of-type) {
    border-end-end-radius: var(--nice-inner-radius);
  }

  :where(th) {
    color: var(--acv-text-primary);
    background-color: var(--acv-surface-secondary);
  }

  :where(table :is(a, button, [contenteditable]):is(:focus-visible)) {
    outline-offset: -2px;
  }

  :where(td) {
    background: var(--acv-surface-primary);
    max-inline-size: var(--acv-size-content-45ch);
    text-wrap: pretty;
  }

  :where(td, th) {
    text-align: left;
    padding: var(--acv-size-8px);
  }

  :where(:is(td, th):not([align])) {
    text-align: center;
  }

  :where(thead) {
    border-collapse: collapse;
  }

  :where(table tr:hover td),
  :where(tbody tr:nth-child(even):hover td) {
    background-color: var(--acv-color-gray-darker);

    @media (prefers-color-scheme: light) {
      background-color: var(--acv-color-white);
    }
  }

  :where(table > caption) {
    margin: var(--acv-size-16px);
  }

  :where(tfoot button) {
    padding-block: var(--acv-size-relative-025);
    padding-inline: var(--acv-size-16px);
  }

  abbr:where([title]) {
    text-decoration: underline dotted;
  }

  h1,
  h2,
  h3,
  h4,
  button,
  input,
  label {
    /* Set shorter line heights on headings and interactive elements */
    line-height: var(--acv-font-line-height-1-1);
  }

  a:not([class]) {
    /* A elements that don't have a class get default styles */
    text-decoration-skip-ink: auto;
    font-weight: var(--acv-font-weight-accent);
    color: var(--acv-color-primary);

    &:hover {
      color: var(--acv-color-primary-dark);
    }
  }

  b,
  strong {
    font-weight: var(--acv-font-weight-strong);
  }

  code,
  kbd,
  samp,
  pre {
    font-family: var(--acv-font-family-mono), monospace;
    font-size: var(--acv-font-size-body);
  }

  small {
    font-size: var(--acv-font-size-note);
  }

  sub {
    bottom: -0.25em;
  }

  sup {
    top: -0.5em;
  }

  input::placeholder,
  textarea::placeholder {
    opacity: 1;
    color: hsl(218deg 11% 65%);
  }

  textarea:not([rows]) {
    /* Make sure textarea without a rows attribute are not tiny */
    min-height: 10em;
  }

  img {
    font-style: italic;
    background-repeat: no-repeat;
    background-size: cover;
    shape-margin: 1rem;
    max-width: 100%;
    height: auto;
    vertical-align: middle;
  }

  :where(fieldset) {
    border-radius: var(--acv-border-radius-regular);

    /* border: var(--acv-border-width-small) solid var(--acv-surface-secondary); */
    border: var(
      --acv-border-primary
    ); /* var(--acv-border-width-small) solid var(--acv-surface-secondary); */
  }

  :where(del) {
    background: var(--acv-color-red-lighter);
    color: var(--acv-color-red-darker);
  }

  :where(ins) {
    background: var(--acv-color-green-lighter);
    color: var(--acv-color-green-darker);
  }

  @media (prefers-reduced-motion: no-preference) {
    :where(:focus-visible) {
      transition: outline-offset 145ms var(--acv-ease-2);
    }

    :where(:not(:active):focus-visible) {
      transition-duration: 0.25s;
    }
  }
}
